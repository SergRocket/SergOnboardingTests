<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="4" failed="3" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Method - validLogin - has started]]>
    </line>
    <line>
      <![CDATA[Start stopping tests]]>
    </line>
    <line>
      <![CDATA[Method - paginationTest - has started]]>
    </line>
    <line>
      <![CDATA[Start stopping tests]]>
    </line>
    <line>
      <![CDATA[Method - searchForValidDifferent - has started]]>
    </line>
    <line>
      <![CDATA[Start stopping tests]]>
    </line>
    <line>
      <![CDATA[Method - searchForOInValidDifferent - has started]]>
    </line>
    <line>
      <![CDATA[Start stopping tests]]>
    </line>
    <line>
      <![CDATA[Method - selectingRandomCategory - has started]]>
    </line>
    <line>
      <![CDATA[Start stopping tests]]>
    </line>
    <line>
      <![CDATA[Method - loginOut - has started]]>
    </line>
    <line>
      <![CDATA[Start stopping tests]]>
    </line>
    <line>
      <![CDATA[Method - negativeLogInTest - has started]]>
    </line>
    <line>
      <![CDATA[Start stopping tests]]>
    </line>
  </reporter-output>
  <suite started-at="2021-11-23T18:00:11 EET" name="Smoke suite" finished-at="2021-11-23T18:00:28 EET" duration-ms="17013">
    <groups>
    </groups>
    <test started-at="2021-11-23T18:00:11 EET" name="SergOnboardingTests" finished-at="2021-11-23T18:00:28 EET" duration-ms="17013">
      <class name="MainPageTests">
        <test-method is-config="true" signature="createTestRun(org.testng.ITestContext,java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:11 EET" name="createTestRun" finished-at="2021-11-23T18:00:11 EET" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createTestRun -->
        <test-method is-config="true" signature="setBrowserAndEnv(java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:11 EET" name="setBrowserAndEnv" finished-at="2021-11-23T18:00:14 EET" duration-ms="2498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setBrowserAndEnv -->
        <test-method is-config="true" signature="beforeClass(org.testng.ITestContext)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:14 EET" name="beforeClass" finished-at="2021-11-23T18:00:14 EET" duration-ms="80" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethodSetup(java.lang.reflect.Method,org.testng.ITestContext,java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:14 EET" name="beforeMethodSetup" finished-at="2021-11-23T18:00:14 EET" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void MainPageTests.validLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method - validLogin - has started]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method signature="validLogin()[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:14 EET" name="validLogin" finished-at="2021-11-23T18:00:14 EET" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLogin -->
        <test-method is-config="true" signature="afterMethodSetup(org.testng.ITestResult)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:14 EET" name="afterMethodSetup" finished-at="2021-11-23T18:00:14 EET" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=SUCCESS method=MainPageTests.validLogin()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Start stopping tests]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodSetup -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:14 EET" name="afterTest" finished-at="2021-11-23T18:00:14 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validLogin status=SUCCESS method=MainPageTests.validLogin()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethodSetup(java.lang.reflect.Method,org.testng.ITestContext,java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:14 EET" name="beforeMethodSetup" finished-at="2021-11-23T18:00:14 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void MainPageTests.paginationTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method - paginationTest - has started]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method signature="paginationTest()[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:14 EET" name="paginationTest" finished-at="2021-11-23T18:00:24 EET" duration-ms="9485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paginationTest -->
        <test-method is-config="true" signature="afterMethodSetup(org.testng.ITestResult)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:24 EET" name="afterMethodSetup" finished-at="2021-11-23T18:00:24 EET" duration-ms="29" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paginationTest status=SUCCESS method=MainPageTests.paginationTest()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Start stopping tests]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodSetup -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:24 EET" name="afterTest" finished-at="2021-11-23T18:00:24 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paginationTest status=SUCCESS method=MainPageTests.paginationTest()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethodSetup(java.lang.reflect.Method,org.testng.ITestContext,java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:24 EET" name="beforeMethodSetup" finished-at="2021-11-23T18:00:24 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void MainPageTests.searchForValidDifferent(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method - searchForValidDifferent - has started]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method signature="searchForValidDifferent(java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:24 EET" name="searchForValidDifferent" data-provider="Test_data" finished-at="2021-11-23T18:00:25 EET" duration-ms="579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[090]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForValidDifferent -->
        <test-method is-config="true" signature="afterMethodSetup(org.testng.ITestResult)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:25 EET" name="afterMethodSetup" finished-at="2021-11-23T18:00:25 EET" duration-ms="28" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchForValidDifferent status=SUCCESS method=MainPageTests.searchForValidDifferent(java.lang.String)[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Start stopping tests]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodSetup -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:25 EET" name="afterTest" finished-at="2021-11-23T18:00:25 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchForValidDifferent status=SUCCESS method=MainPageTests.searchForValidDifferent(java.lang.String)[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethodSetup(java.lang.reflect.Method,org.testng.ITestContext,java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:25 EET" name="beforeMethodSetup" finished-at="2021-11-23T18:00:25 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void MainPageTests.searchForOInValidDifferent(java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method - searchForOInValidDifferent - has started]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method signature="searchForOInValidDifferent(java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:25 EET" name="searchForOInValidDifferent" data-provider="Test_data" finished-at="2021-11-23T18:00:25 EET" duration-ms="520" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[ZAZ]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Ðš Ñ�Ð¾Ð¶Ð°Ð»ÐµÐ½Ð¸ÑŽ, Ð¿Ð¾ Ð·Ð°Ð¿Ñ€Ð¾Ñ�Ñƒ "ZAZ" Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð¾.
Ð¡Ð²Ñ�Ð¶Ð¸Ñ‚ÐµÑ�ÑŒ, Ð¿Ð¾Ð¶Ð°Ð»ÑƒÐ¹Ñ�Ñ‚Ð°, Ñ� Ð½Ð°ÑˆÐ¸Ð¼Ð¸ Ñ�Ð¿ÐµÑ†Ð¸Ð°Ð»Ð¸Ñ�Ñ‚Ð°Ð¼Ð¸ Ð¿Ð¾ ÑƒÐºÐ°Ð·Ð°Ð½Ð½Ñ‹Ð¼ Ð²Ñ‹ÑˆÐµ Ñ‚ÐµÐ»ÐµÑ„Ð¾Ð½Ð°Ð¼.] but found [К сожалению, по запросу "ZAZ" ничего не найдено.
Свяжитесь, пожалуйста, с нашими специалистами по указанным выше телефонам.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Ðš Ñ�Ð¾Ð¶Ð°Ð»ÐµÐ½Ð¸ÑŽ, Ð¿Ð¾ Ð·Ð°Ð¿Ñ€Ð¾Ñ�Ñƒ "ZAZ" Ð½Ð¸Ñ‡ÐµÐ³Ð¾ Ð½Ðµ Ð½Ð°Ð¹Ð´ÐµÐ½Ð¾.
Ð¡Ð²Ñ�Ð¶Ð¸Ñ‚ÐµÑ�ÑŒ, Ð¿Ð¾Ð¶Ð°Ð»ÑƒÐ¹Ñ�Ñ‚Ð°, Ñ� Ð½Ð°ÑˆÐ¸Ð¼Ð¸ Ñ�Ð¿ÐµÑ†Ð¸Ð°Ð»Ð¸Ñ�Ñ‚Ð°Ð¼Ð¸ Ð¿Ð¾ ÑƒÐºÐ°Ð·Ð°Ð½Ð½Ñ‹Ð¼ Ð²Ñ‹ÑˆÐµ Ñ‚ÐµÐ»ÐµÑ„Ð¾Ð½Ð°Ð¼.] but found [К сожалению, по запросу "ZAZ" ничего не найдено.
Свяжитесь, пожалуйста, с нашими специалистами по указанным выше телефонам.]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at MainPageTests.searchForOInValidDifferent(MainPageTests.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForOInValidDifferent -->
        <test-method is-config="true" signature="afterMethodSetup(org.testng.ITestResult)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:25 EET" name="afterMethodSetup" finished-at="2021-11-23T18:00:25 EET" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchForOInValidDifferent status=FAILURE method=MainPageTests.searchForOInValidDifferent(java.lang.String)[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Start stopping tests]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodSetup -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:25 EET" name="afterTest" finished-at="2021-11-23T18:00:25 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchForOInValidDifferent status=FAILURE method=MainPageTests.searchForOInValidDifferent(java.lang.String)[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethodSetup(java.lang.reflect.Method,org.testng.ITestContext,java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:25 EET" name="beforeMethodSetup" finished-at="2021-11-23T18:00:25 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void MainPageTests.selectingRandomCategory() throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method - selectingRandomCategory - has started]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method signature="selectingRandomCategory()[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:25 EET" name="selectingRandomCategory" finished-at="2021-11-23T18:00:27 EET" duration-ms="2092" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectingRandomCategory -->
        <test-method is-config="true" signature="afterMethodSetup(org.testng.ITestResult)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:27 EET" name="afterMethodSetup" finished-at="2021-11-23T18:00:27 EET" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectingRandomCategory status=SUCCESS method=MainPageTests.selectingRandomCategory()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Start stopping tests]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodSetup -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:27 EET" name="afterTest" finished-at="2021-11-23T18:00:27 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectingRandomCategory status=SUCCESS method=MainPageTests.selectingRandomCategory()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethodSetup(java.lang.reflect.Method,org.testng.ITestContext,java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:27 EET" name="beforeMethodSetup" finished-at="2021-11-23T18:00:27 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void MainPageTests.loginOut()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method - loginOut - has started]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method signature="loginOut()[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:27 EET" name="loginOut" finished-at="2021-11-23T18:00:27 EET" duration-ms="55" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[text()='Ð’Ñ‹Ñ…Ð¾Ð´']"}
  (Session info: chrome=96.0.4664.45)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '4.0.0-alpha-3', revision: '8c567de6dc'
System info: host: 'A030320', ip: '172.30.96.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Windows\TEMP\scoped_dir1...}, goog:chromeOptions: {debuggerAddress: localhost:1165}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 5025ccf8cfb78180ff0a8a6ce9a9d339
*** Element info: {Using=xpath, value=//a[text()='Ð’Ñ‹Ñ…Ð¾Ð´']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[text()='Ð’Ñ‹Ñ…Ð¾Ð´']"}
  (Session info: chrome=96.0.4664.45)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '4.0.0-alpha-3', revision: '8c567de6dc'
System info: host: 'A030320', ip: '172.30.96.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Windows\TEMP\scoped_dir1...}, goog:chromeOptions: {debuggerAddress: localhost:1165}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 5025ccf8cfb78180ff0a8a6ce9a9d339
*** Element info: {Using=xpath, value=//a[text()='Ð’Ñ‹Ñ…Ð¾Ð´']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:191)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:125)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:576)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:445)
at org.openqa.selenium.By$ByXPath.findElement(By.java:396)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:319)
at Base.BaseTest.logOut(BaseTest.java:192)
at MainPageTests.loginOut(MainPageTests.java:94)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginOut -->
        <test-method is-config="true" signature="afterMethodSetup(org.testng.ITestResult)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:28 EET" name="afterMethodSetup" finished-at="2021-11-23T18:00:28 EET" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginOut status=FAILURE method=MainPageTests.loginOut()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Start stopping tests]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodSetup -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:28 EET" name="afterTest" finished-at="2021-11-23T18:00:28 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginOut status=FAILURE method=MainPageTests.loginOut()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethodSetup(java.lang.reflect.Method,org.testng.ITestContext,java.lang.String)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:28 EET" name="beforeMethodSetup" finished-at="2021-11-23T18:00:28 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void MainPageTests.negativeLogInTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Method - negativeLogInTest - has started]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethodSetup -->
        <test-method signature="negativeLogInTest()[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:28 EET" name="negativeLogInTest" finished-at="2021-11-23T18:00:28 EET" duration-ms="52" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=96.0.4664.45)
Build info: version: '4.0.0-alpha-3', revision: '8c567de6dc'
System info: host: 'A030320', ip: '172.30.96.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Windows\TEMP\scoped_dir1...}, goog:chromeOptions: {debuggerAddress: localhost:1165}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 5025ccf8cfb78180ff0a8a6ce9a9d339]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=96.0.4664.45)
Build info: version: '4.0.0-alpha-3', revision: '8c567de6dc'
System info: host: 'A030320', ip: '172.30.96.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '9.0.4'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Windows\TEMP\scoped_dir1...}, goog:chromeOptions: {debuggerAddress: localhost:1165}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 5025ccf8cfb78180ff0a8a6ce9a9d339
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:191)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:125)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:576)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:308)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:107)
at Base.BaseTest.invalidLog(BaseTest.java:174)
at MainPageTests.negativeLogInTest(MainPageTests.java:104)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeLogInTest -->
        <test-method is-config="true" signature="afterMethodSetup(org.testng.ITestResult)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:28 EET" name="afterMethodSetup" finished-at="2021-11-23T18:00:28 EET" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=negativeLogInTest status=FAILURE method=MainPageTests.negativeLogInTest()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Start stopping tests]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethodSetup -->
        <test-method is-config="true" signature="afterTest(org.testng.ITestResult,org.testng.ITestContext)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:28 EET" name="afterTest" finished-at="2021-11-23T18:00:28 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=negativeLogInTest status=FAILURE method=MainPageTests.negativeLogInTest()[pri:0, instance:MainPageTests@345f69f3] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="killDriver()[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:28 EET" name="killDriver" finished-at="2021-11-23T18:00:28 EET" duration-ms="600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killDriver -->
        <test-method is-config="true" signature="tearDownTestRailAndDriver(org.testng.ITestContext)[pri:0, instance:MainPageTests@345f69f3]" started-at="2021-11-23T18:00:28 EET" name="tearDownTestRailAndDriver" finished-at="2021-11-23T18:00:28 EET" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@217dc48e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownTestRailAndDriver -->
      </class> <!-- MainPageTests -->
    </test> <!-- SergOnboardingTests -->
  </suite> <!-- Smoke suite -->
</testng-results>
